@charset "UTF-8";
/**
 * flex.scss
 * @authors Anne (dai_pianpian@126.com)
 * @date    2019-04-11 00:45:56
 * @version $1.0.0$
 */

/* 实现css水平垂直居中 start */
@mixin center-ele($width:null,$height:null){
    position: absolute;
            top: 50%;
            left: 50%;
    @if $width and $height {
            // do margin
            width: $width;
            height: $height;
            margin: -($height / 2) #{0 0} -($width / 2);   //这里如果直接写 0 0 他会编译为 margin: xx 0 xx 而不是 margin：xx 0 0 xx，所以用 #{0 0}

    } @else if not $width and not $height {
            // do transform translate(-50%,-50%)
            transform: translate(-50%,-50);
    } @else if not $width {
            // do margin-top and transform translateX
            height: $height;
            margin-top: -($height / 2);
            transform: translateX(-50%); 
    } @else {
            // do margin-left and transform translateY
            width: $width;
            margin-top: -($width / 2);
            transform: translateY(-50%); 
    }
}
/* 实现css水平垂直居中 end */

/*================以下是center调用方式==============*/
@charset "UTF-8";
/**
 * 为子元素设定定位上下文
 */
.parent {
  position: relative;
}

/**
 * 让子元素绝对居中于父容器
 * 没有向 Sass mixin 传递宽和高，使用 CSS transform 属性实现居中效果
 */
.child-with-unknown-direction {
    @include center;
}

/**
 * 让子元素绝对居中于父容器
 * 向 Sass mixin 传递了宽度，所以就使用负向 margin 处理水平位置，
 * 使用 CSS transform translateY 处理垂直位置 
 */
.child-with-known-width {
    @include center(400px);
}

/**
 * 让子元素绝对居中于父容器
 * 向 Sass mixin 传递了高度，所以就使用负向 margin 处理垂直位置，
 * 使用 CSS transform translateX 处理水平位置 
 */
.child-with-known-height {
    @include center($height: 400px);
}

/**
 * 让子元素绝对居中于父容器
 * 向 Sass mixin 传递了高度和宽度，所以就使用负向 margin 处理水平和垂直位置
 */
.child-with-known-direction {
    @include center(400px, 400px);
}



/*
	使用 Flexbox 需要为父容器设定相关样式，而使用前面的方法则主要是为子元素设定相关样式（当然，父容器需要被设定为除 static 之外的任意 position
 */
@mixin center-children {
	display: flex;
	justify-content: center;
	align-items: center;
}
/*================以下是center-children调用方式==============*/
.parent {
    @include center-children;
}




